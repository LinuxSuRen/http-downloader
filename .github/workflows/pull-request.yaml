name: Pull Request Build

on:
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    steps:
      - name: Set up Go 1.16
        uses: actions/setup-go@v3
        with:
          go-version: 1.16
        id: go
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3.1.0
      - name: Upgrade upx
        run: |
          # try to fix https://github.com/jenkins-zh/jenkins-cli/issues/493
          wget https://github.com/upx/upx/releases/download/v3.96/upx-3.96-amd64_linux.tar.xz
          tar xvf upx-3.96-amd64_linux.tar.xz
          upx-3.96-amd64_linux/upx -V
          sudo mv upx-3.96-amd64_linux/upx $(which upx)
          upx -V
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2.9.1
        with:
          version: latest
          args: release --skip-publish --rm-dist
      - name: Test against the cmd
        run: |
          sudo ./release/http-downloader_linux_amd64_v1/hd install jenkins-zh/jenkins-cli/jcli
          jcli version

          sudo ./release/http-downloader_linux_amd64_v1/hd install ks
          ks version
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.2.1
        if: github.event_name == 'pull_request'
        with:
          scan-type: 'fs'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

  GoLint:
    name: Lint
    runs-on: ubuntu-20.04
    steps:
      - name: Set up Go 1.16
        uses: actions/setup-go@v3
        with:
          go-version: 1.16
        id: go
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3.1.0
      - name: Go-linter-1
        uses: Jerome1337/golint-action@v1.0.2
        with:
          golint-path: ./...
  Security:
    name: Security
    runs-on: ubuntu-20.04
    env:
      GO111MODULE: on
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3.1.0
      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: '-exclude=G402,G204,G304,G110,G306,G107 ./...'
  CodeQL:
    name: CodeQL
    runs-on: ubuntu-20.04
    env:
      GO111MODULE: on
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3.1.0
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: go
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1
  MarkdownLinkCheck:
    name: MarkdownLinkCheck
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3.1.0
      - uses: gaurav-nelson/github-action-markdown-link-check@1.0.13
        with:
          use-verbose-mode: 'yes'
